% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dm.R
\name{dm}
\alias{dm}
\alias{new_dm}
\alias{validate_dm}
\alias{cdm_get_src}
\alias{cdm_get_tables}
\alias{cdm_get_data_model}
\alias{is_dm}
\alias{as_dm}
\title{Data model class}
\usage{
dm(src, data_model = NULL)

new_dm(src, tables, data_model)

validate_dm(x)

cdm_get_src(x)

cdm_get_tables(x)

cdm_get_data_model(x)

is_dm(x)

as_dm(x)
}
\arguments{
\item{src}{A \pkg{dplyr} table source object.}

\item{data_model}{A \pkg{datamodelr} data model object, or \code{NULL}.}

\item{tables}{A list of the tables (tibble-objects, not names) to be included in the \code{dm} object}

\item{x}{An object.}
}
\description{
The \code{dm} class wraps \link[dplyr:src]{dplyr::src} and adds a description of table relationships
based on \link[datamodelr:datamodelr-package]{datamodelr::datamodelr-package}.

\code{dm()} coerces its inputs.

\code{new_dm()} only checks if the inputs are of the correct class.

\code{validate_dm()} checks consistency between the \pkg{dplyr} source
and the \pkg{datamodelr} based specification of table relationships.
This function is currently a no-op.

\code{cdm_get_src()} returns the \pkg{dplyr} source component of a \code{dm}
object.

\code{cdm_get_tables()} returns a named list with \pkg{dplyr} \link{tbl} objects
of a \code{dm} object.

\code{cdm_get_data_model()} returns the \pkg{datamodelr} data model component of a \code{dm}
object.

\code{is_dm()} returns \code{TRUE} if the input is of class \code{dm}.

\code{as_dm()} coerces objects to the \code{dm} class
}
\examples{
library(dplyr)
dm(dplyr::src_df(pkg = "nycflights13"))
as_dm(list(iris = iris, mtcars = mtcars))

cdm_nycflights13() \%>\% tbl("airports")
cdm_nycflights13() \%>\% src_tbls()
cdm_nycflights13() \%>\% cdm_get_src()
cdm_nycflights13() \%>\% cdm_get_tables()
cdm_nycflights13() \%>\% cdm_get_data_model()

cdm_nycflights13() \%>\%
  cdm_rename_table(airports, ap)
cdm_nycflights13() \%>\%
  cdm_rename_tables(c("airports", "flights"), c("ap", "fl"))
}
\seealso{
\itemize{
\item \code{\link[=cdm_add_pk]{cdm_add_pk()}} and \code{\link[=cdm_add_fk]{cdm_add_fk()}} add primary and foreign keys
\item \code{\link[=cdm_copy_to]{cdm_copy_to()}} and \code{\link[=cdm_learn_from_db]{cdm_learn_from_db()}} for DB interaction
\item \code{\link[=cdm_draw]{cdm_draw()}} for visualization
\item \code{\link[=cdm_join_tbl]{cdm_join_tbl()}} for flattening
\item \code{\link[=cdm_filter]{cdm_filter()}} for filtering
\item \code{\link[=cdm_select_tbl]{cdm_select_tbl()}} for creating a \code{dm} with only a subset of the tables
\item \code{\link[=decompose_table]{decompose_table()}} as one example of the table surgery family
\item \code{\link[=check_key]{check_key()}} and \code{\link[=check_if_subset]{check_if_subset()}} for checking for key properties
\item \code{\link[=check_cardinality]{check_cardinality()}} for checking the cardinality of the relation between two tables
\item \code{\link[=cdm_nycflights13]{cdm_nycflights13()}}  for creating an example \code{dm} object
}
}
